{"version":3,"sources":["Style.js","App.jsx","index.js"],"names":["UseStyles","makeStyles","container","appBar","background","minHeight","marginBottom","redBar","marginTop","width","borderRadius","yellowBar","greenBar","msgRed","color","msgYellow","msgGreen","card","inputText","borderBottomColor","borderColor","getlength","number","toString","length","App","classes","React","useState","showPIN","setVisibility","msg","setMsg","PIN","setPIN","red","setRed","yellow","setYellow","green","setGreen","tip","setTip","PINauth","common","i","n2","arr","split","console","log","max","recent","j","PINauthSecond","CssBaseline","AppBar","className","position","Toolbar","Typography","variant","Container","maxWidth","Card","CardContent","align","noValidate","autoComplete","TextField","id","label","value","onKeyDown","e","key","slice","preventDefault","onChange","target","type","InputProps","endAdornment","InputAdornment","IconButton","onClick","Visibility","VisibilityOff","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.638c355e.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst UseStyles = makeStyles({\r\n    container: {\r\n\r\n    },\r\n    appBar: {\r\n        background: 'primary',\r\n        minHeight: \"20px\",\r\n        marginBottom: \"20px\"\r\n    },\r\n    redBar:{\r\n        background: \"red\",\r\n        minHeight: \"5px\",\r\n        marginBottom: \"5px\",\r\n        marginTop: \"5px\",\r\n        width: \"50%\",\r\n        borderRadius: \"50px\",\r\n    },\r\n    yellowBar:{\r\n      background: \"yellow\",\r\n      minHeight: \"5px\",\r\n      marginBottom: \"5px\",\r\n      marginTop: \"5px\",\r\n      width: \"50%\",\r\n      borderRadius: \"50px\",\r\n    },\r\n    greenBar:{\r\n      background: \"lightgreen\",\r\n      minHeight: \"5px\",\r\n      marginBottom: \"5px\",\r\n      marginTop: \"5px\",\r\n      width: \"50%\",\r\n      borderRadius: \"50px\",\r\n    },\r\n    msgRed:{\r\n      color: \"red\"\r\n    },\r\n    msgYellow:{\r\n      color: \"orange\"\r\n    },\r\n    msgGreen:{\r\n      color: \"green\"\r\n    },\r\n    card: {\r\n        marginTop: \"125px\",\r\n        marginBottom: \"75px\"\r\n    },\r\n    inputText: {\r\n      width: \"50%\",\r\n        '& label.Mui-focused': {\r\n            color: 'grey',\r\n          },\r\n          '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'grey',\r\n          },\r\n          '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n              borderColor: 'lightgrey',\r\n              borderRadius: \"5px\",\r\n            },\r\n            '&:hover fieldset': {\r\n              borderColor: 'Primary',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n              borderColor: 'Primary',\r\n            },\r\n        }\r\n}\r\n});\r\n\r\nexport default UseStyles;","import React from \"react\";\r\nimport { Typography , CssBaseline , AppBar, Toolbar , Container, Card, CardContent, TextField, InputAdornment, IconButton } from \"@material-ui/core\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport UseStyles from \"./Style\";\r\n\r\nfunction getlength(number) {\r\n    return number.toString().length;\r\n}\r\n\r\n\r\n\r\nconst App = () => {\r\n    const classes = UseStyles();\r\n    let [showPIN, setVisibility] = React.useState(false);\r\n    let [msg, setMsg] = React.useState(\"\");\r\n    let [PIN, setPIN] = React.useState(\"\");\r\n    let [red, setRed] = React.useState(false);\r\n    let [yellow, setYellow] = React.useState(false);\r\n    let [green, setGreen] = React.useState(false);\r\n    let [tip, setTip] = React.useState(\"\");\r\n\r\n    function PINauth(number){\r\n        if(getlength(+number) < 4)\r\n        {\r\n            setRed(true);\r\n            setYellow(false);\r\n            setGreen(false);\r\n            setMsg(\"Weak\");\r\n            setTip(\"Tip: PIN length should be 4-digits\");\r\n            return;\r\n        }\r\n        if(1949 < +number && +number < 2020)\r\n        {\r\n            setRed(true);\r\n            setYellow(false);\r\n            setGreen(false);\r\n            setMsg(\"Weak\");\r\n            setTip(\"Tip: PIN shouldn't be a common year\");\r\n            return;\r\n        }\r\n        let common = [1234,1111,0,1212,7777,1004,2000,4444,2222,6969,9999,3333,5555,6666,1122,1313,8888,4321,2001,1010];\r\n        for(let i=0 ; i<common.length ; i++)\r\n        {\r\n            if(+number===common[i])\r\n            {\r\n                setRed(true);\r\n                setYellow(false);\r\n                setGreen(false);\r\n                setMsg(\"Weak\");\r\n                setTip(\"Tip: PIN shouldn't be a common pattern\");\r\n                return;\r\n            }\r\n        }\r\n        PINauthSecond(+number);\r\n    }\r\n\r\n    function PINauthSecond(n2){\r\n        let arr = n2.toString().split('');\r\n        for (let i = 0; i < arr.length; i++) arr[i] = +arr[i] | 0;\r\n        console.log(arr);\r\n        if((+arr[0]===(+arr[1]+1) && (+arr[1]===(+arr[2]+1)) && +arr[2]===(+arr[3]+1)) ||\r\n        (+arr[1]===(+arr[0]+1) && (+arr[2]===(+arr[1]+1)) && +arr[3]===(+arr[2]+1)))\r\n        {\r\n            setRed(false);\r\n            setYellow(true);\r\n            setGreen(false);\r\n            setMsg(\"Moderate\");\r\n            setTip(\"Tip: PIN shouldn't be an increasing or decreasing pattern\");\r\n            return;\r\n        }\r\n        let max=0;\r\n        for(let i=0 ; i<4 ; i++)\r\n        {\r\n            let recent=0;\r\n            for(let j=i+1 ; j<4 ; j++)\r\n            {\r\n                if(i!==j)\r\n                {\r\n                    if(arr[i]===arr[j])\r\n                    {\r\n                        recent++;\r\n                    }\r\n                }\r\n            }\r\n            max+=recent;\r\n        }\r\n        console.log(max);\r\n        if(max >=2)\r\n        {\r\n            setRed(true);\r\n            setYellow(false);\r\n            setGreen(false);\r\n            setMsg(\"Weak\");\r\n            setTip(\"Tip: PIN should not contain repeating digits\");\r\n            return;\r\n        }\r\n        else if(max>=1)\r\n        {\r\n            setRed(false);\r\n            setYellow(true);\r\n            setGreen(false);\r\n            setMsg(\"Moderate\");\r\n            setTip(\"Tip: PIN should not contain repeating digits\");\r\n            return;\r\n        }\r\n        else\r\n        {\r\n            setRed(false);\r\n            setYellow(false);\r\n            setGreen(true);\r\n            setMsg(\"Strong\");\r\n            setTip(\"\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    return( \r\n    <>\r\n        <CssBaseline/>\r\n        <AppBar className={classes.appBar} position=\"relative\">\r\n            <Toolbar>\r\n                <Typography variant=\"h6\">PIN Strength Meter</Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n        <Container className={classes.card} maxWidth=\"sm\">\r\n            <Card>\r\n                <AppBar className={classes.appBar} position=\"relative\">\r\n                </AppBar>\r\n                <CardContent align=\"center\">\r\n                    <form noValidate autoComplete=\"off\">\r\n                        <TextField className={classes.inputText}  id=\"pin\" label=\"Enter PIN\" value={PIN} variant=\"outlined\" \r\n                        onKeyDown={\r\n                            (e) =>\r\n                            {\r\n                                if(e.key === \"Backspace\")\r\n                                {\r\n                                    setPIN(PIN.slice(0,PIN.length-1));\r\n                                    e.preventDefault();\r\n                                }\r\n                                else if(e.key === \"Enter\")\r\n                                {\r\n                                    PINauth(+PIN);\r\n                                }\r\n                                if(e.key === \"0\" || e.key === \"1\" || e.key === \"2\" || e.key === \"3\" || e.key === \"4\" ||\r\n                                 e.key === \"5\" || e.key === \"6\" || e.key === \"7\" || e.key === \"8\" || e.key === \"9\")\r\n                                {\r\n                                    \r\n                                }\r\n                                else\r\n                                {\r\n                                    e.preventDefault();\r\n                                }\r\n                                \r\n                            }} \r\n                        onChange={\r\n                            ((e)=>\r\n                            {\r\n                                if(getlength(PIN) < 4)\r\n                                {\r\n                                    setPIN(e.target.value);\r\n                                }\r\n                            })\r\n                            }\r\n                        type={\r\n                            showPIN? \"text\":\"password\"\r\n                            } \r\n                        InputProps={\r\n                            { \r\n                                endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                <IconButton onClick={\r\n                                    () => {\r\n                                        setVisibility(!showPIN);\r\n                                        console.log(showPIN);\r\n                                    }\r\n                                    } >\r\n                                    {\r\n                                        showPIN? <Visibility/> :<VisibilityOff/>\r\n                                    }\r\n                                </IconButton>\r\n                                </InputAdornment>) }}  />\r\n                        <AppBar className={\r\n                            (\r\n                                ()=>\r\n                                {\r\n                                    if(red)\r\n                                    {\r\n                                        return(classes.redBar);\r\n                                    }\r\n                                    else if(yellow)\r\n                                    {\r\n                                        return(classes.yellowBar);\r\n                                    }\r\n                                    else if(green)\r\n                                    {\r\n                                        return(classes.greenBar);\r\n                                    }\r\n                                }\r\n                            )()\r\n                            } position=\"relative\"></AppBar>\r\n\r\n\r\n                        {\r\n                        (\r\n                            ()=>\r\n                            {\r\n                                return( <Typography className={\r\n                                    (()=> {\r\n                                        if(msg===\"Weak\")\r\n                                        {\r\n                                            return (classes.msgRed);\r\n                                        }\r\n                                        else if(msg===\"Moderate\")\r\n                                        {\r\n                                            return (classes.msgYellow);\r\n                                        }\r\n                                        else\r\n                                        {\r\n                                            return (classes.msgGreen);\r\n                                        }\r\n                                    })()\r\n                                } variant=\"h5\">\r\n                                    {\r\n                                        (() => {\r\n                                            return (msg);\r\n                                        })()\r\n                                    }\r\n                                    </Typography> )\r\n                            }\r\n                        )()\r\n                        }\r\n                    </form>\r\n                </CardContent>\r\n                <CardContent>\r\n                    <Typography variant=\"h6\" align=\"center\">{tip}</Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}